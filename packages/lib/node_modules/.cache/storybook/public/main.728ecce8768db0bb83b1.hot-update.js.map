{"version":3,"file":"main.728ecce8768db0bb83b1.hot-update.js","sources":["webpack:///./components/input/input.tsx","webpack:///./theme/colors.ts","webpack:///./theme/icons.ts","webpack:///./theme/index.ts","webpack:///./theme/media.ts","webpack:///./theme/shadow.ts","webpack:///./theme/theme.ts","webpack:///./theme/typography.ts","webpack:///./theme/useDarkTheme.tsx","webpack:///./theme/useTheme.ts","webpack:///./theme/utils.ts"],"sourcesContent":["import { FunctionComponent } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { withTheme } from \"../../theme\";\n\nexport interface ErrorAction {\n  onClick: () => void;\n  text: string;\n}\n\nexport interface InputProps extends React.InputHTMLAttributes<HTMLInputElement> {\n  label?: string;\n  error?: string;\n  block?: boolean;\n  errorAction?: {\n    onClick?: () => void;\n    text: string;\n  };\n}\n\nexport const Input: FunctionComponent<InputProps> = ({ error, label, block = false, errorAction, ...props }) => {\n  const hasError = !!error?.trim();\n  return (\n    <Container block={block}>\n      {label && <Label htmlFor={label}>{label}</Label>}\n      <StyledInput hasError={hasError} id={label} {...props} />\n      <ErrorWrapper>\n        {hasError && <ErrorMessage>{error}</ErrorMessage>}\n        {errorAction?.onClick && <button onClick={errorAction.onClick}>{errorAction.text}</button>}\n      </ErrorWrapper>\n    </Container>\n  );\n};\n\nexport const Container = styled.div<{ block: boolean }>`\n  display: flex;\n  flex-direction: column;\n  width: ${({ block }) => (block ? \"100%\" : \"416px\")};\n\n  input[type=\"number\"]::-webkit-inner-spin-button,\n  input[type=\"number\"]::-webkit-outer-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n\n  input[type=\"number\"] {\n    -moz-appearance: textfield;\n  }\n`;\n\nexport const Label = styled.label`\n  font-size: 16px;\n  font-weight: 700;\n  color: ${withTheme(({ theme }) => theme.components.Input.label.color)};\n`;\n\ntype StyledInputType = React.InputHTMLAttributes<HTMLInputElement> & {\n  hasError?: boolean;\n};\n\nexport const StyledInput = styled.input<StyledInputType>`\n  border-radius: 8px;\n\n  height: 64px;\n  box-sizing: border-box;\n  padding: 16px;\n  font-size: 20px;\n  font-weight: 700;\n  margin: 12px 0;\n  font-family: inherit;\n  ${withTheme(({ theme }) => css(theme.components.Input.box.common))}\n  &:focus {\n    outline: none;\n  }\n  &:focus-visible {\n    border-color: ${withTheme(({ theme }) => theme.components.Input.box.focusVisible.borderColor)};\n    color: ${withTheme(({ theme }) => theme.colors.common.black)};\n  }\n\n  &:not(:placeholder-shown) {\n    color: ${withTheme(({ theme }) => theme.colors.common.black)};\n  }\n\n  ${({ hasError }) =>\n    hasError &&\n    css`\n      border-color: ${withTheme(({ theme }) => theme.components.Input.box.error.color)};\n    `};\n`;\n\nexport const ErrorWrapper = styled.div`\n  display: flex;\n  gap: 4px;\n\n  button {\n    border: none;\n    background: none;\n    cursor: pointer;\n    color: ${withTheme(({ theme }) => theme.components.Input.box.focusVisible.borderColor)};\n    font-family: ${withTheme(({ theme }) => theme.typography.common.fontFamily)};\n    font-size: 16px;\n  }\n`;\n\nexport const ErrorMessage = styled.span`\n  color: ${withTheme(({ theme }) => theme.components.Input.box.error.color)};\n  font-size: 16px;\n  font-weight: 400;\n\n  &&::after {\n    content: \".\";\n  }\n`;\n","export const colors = {\n  white: \"#FFFFFF\",\n  black: \"#2F2F2F\",\n\n  black800: \"#212B36\",\n\n  blue100: \"#D0F2FE\",\n  // blue400: \"#0091ff\",\n  blue500: \"#1990FF\",\n  blue900: \"#042979\",\n\n  purple100: \"#E9E0FF\",\n  purple500: \"#5314F1\",\n  purple900: \"#2B0A7D\",\n\n  skyblue100: \"#DEFBFF\",\n  skyblue500: \"#04E2FF\",\n  skyblue900: \"#00C0D9\",\n\n  pink100: \"#FFE0F5\",\n  pink500: \"#EF18AC\",\n  pink600: \"#CB2d74\",\n  pink900: \"#AC0678\",\n\n  grey50: \"#e7edff\",\n  grey100: \"#F8F8F8\",\n  grey200: \"#EEEEEE\",\n  grey300: \"#D7D9E1\",\n  grey500: \"#9BA4AE\",\n  grey700: \"#5E6D7C\",\n  // grey900: \"#2F2F2F\",\n\n  yellow100: \"#FFF6DC\",\n  yellow500: \"#FAD972\",\n  yellow800: \"#FFC007\",\n  yellow900: \"#E4BB3B\",\n\n  brown50: \"#FFE7D9\",\n  brown100: \"#FFF7CC\",\n  brown700: \"#7A4F01\",\n  brown800: \"#463138\",\n\n  red500: \"#FE4842\",\n  red900: \"#7A0B2E\",\n\n  green100: \"#C8FACD\",\n  green900: \"#53D62B\",\n  darkgreen800: \"#015249\",\n  darkgreen900: \"#2B4737\",\n\n  success100: \"#E7F8F4\",\n  success500: \"#11BC91\",\n  success900: \"#25735F\",\n\n  warning100: \"#FFF8E7\",\n  warning500: \"#FFBC0E\",\n  warning900: \"#A1812D\",\n\n  error100: \"#FDEEEE\",\n  error500: \"#EB5757\",\n  error900: \"#782424\",\n};\n","const regular = {\n  small: \"16px\",\n  medium: \"24px\",\n  large: \"32px\",\n  xlarge: \"60px\",\n} as const;\n\nexport type IIconSize = {\n  xsmall?: string;\n  small: string;\n  medium: string;\n  large: string;\n  xlarge?: string;\n};\n\nexport type IIconTheme = {\n  sizes: {\n    crypto: IIconSize;\n    regular: IIconSize;\n    account: IIconSize;\n    filled: IIconSize;\n    thin: IIconSize;\n  };\n};\n\nexport const createIconTheme = (): IIconTheme => {\n  return {\n    sizes: {\n      crypto: {\n        xsmall: \"24px\",\n        small: \"32px\",\n        medium: \"40px\",\n        large: \"48px\",\n      },\n      regular: regular,\n      account: regular,\n      filled: regular,\n      thin: regular,\n    },\n  };\n};\n","export * from \"./theme\";\nexport * from \"./useTheme\";\nexport * from \"./useDarkTheme\";\nexport * from \"./utils\";\n","export type Device = \"xsmall\" | \"mobile\" | \"tablet\" | \"desktop\";\n\nexport type DeviceSizes = \"xSmall\" | \"small\" | \"medium\" | \"large\";\n\nexport type BreakPointDirection = \"up\" | \"down\";\n\nexport const MEDIA_WIDTHS: Record<DeviceSizes, number> = {\n  xSmall: 480, // small phone\n  small: 720, // large phone\n  medium: 960, // tablet\n  large: 1200, // laptop\n};\n\nconst breakpoints: Record<BreakPointDirection, Record<Device, string>> = {\n  up: {\n    xsmall: `(min-width: ${MEDIA_WIDTHS[\"xSmall\"]}px)`,\n    mobile: `(min-width: ${MEDIA_WIDTHS[\"small\"]}px)`,\n    tablet: `(min-width: ${MEDIA_WIDTHS[\"medium\"]}px)`,\n    desktop: `(min-width: ${MEDIA_WIDTHS[\"large\"]}px)`,\n  },\n  down: {\n    xsmall: `(max-width: ${MEDIA_WIDTHS[\"xSmall\"]}px)`,\n    mobile: `(max-width: ${MEDIA_WIDTHS[\"small\"]}px)`,\n    tablet: `(max-width: ${MEDIA_WIDTHS[\"medium\"]}px)`,\n    desktop: `(max-width: ${MEDIA_WIDTHS[\"large\"]}px)`,\n  },\n};\nconst media = { MEDIA_WIDTHS, breakpoints };\nexport default media;\n","// export const DefaultColorsPallete = {\n//   main: colors.blue500,\n//   // subtle: \"#e7edff\",\n//   header: colors.white,\n//   // Icon Background Colors\n//   // icon1: `${colors.blue500}, #25a6ee`,\n//   // icon2: `#1fdeea, ${colors.success500}`,\n//   // icon3:  \"#85d9ef, #3fadfc\",\n//   // Background Colors\n//   // bg1: colors.white,\n//   // bg2: colors.blue100,\n//   // bg3: \"#f2f2f2\",\n//   // text1: colors.black,\n//   // text2: \"#6b707e\",\n//   // text3:  \"#cfdbf2\",\n//   // // Button Colors\n//   // btn1: colors.blue500,\n//   // btn1Press: \"#001352\",\n//   // btn2: colors.success500,\n//   // btn2Press: \"#02684E\",\n//   // btnDisabled: \"#bdbdbd\",\n//   // // Disabled Colors\n//   // disable1: colors.grey500,\n//   // disable2: colors.grey200,\n//   // green: {\n//   //   color: \"#015249\",\n//   //   background: \"#C8FACD\",\n//   //   highlightLight: \"#53D62B\",\n//   //   highlightDark: \"#2B4737\",\n//   //   midtone: \"#53D62B\",\n//   // },\n//   // yellow: { color: \"#7A4F01\", background: \"#FFF7CC\", midtone: \"#FFC007\" },\n//   // blue: { color: \"#042979\", background: \"#D0F2FE\", midtone: \"#1990FF\" },\n//   // red: {\n//   //   color: \"#7A0B2E\",\n//   //   background: \"#FFE7D9\",\n//   //   highlightDark: \"#463138\",\n//   //   highlightLight: \"#FE4842\",\n//   //   midtone: \"#FE4842\",\n//   // },\n//   // default: { background: \"#212B36\", color: \"#FFF\", midtone: \"#212B36\" },\n//   // background: { dark: \"#020028\", light: \"#550B40\" },\n// };\n// export const createColorsPallette = (overrides: Partial<IColorsPallette> = {}): IColorsPallette => {\n//   return {\n//     ...DefaultColorsPallete,\n//     ...overrides\n//   }\n// }\n// export const DarkColorPallette = createColorsPallette({\n//   preloader: \"#1b1c21\",\n//   main: colors.red100,\n//   subtle: colors.red100,\n//   header: \"#0e0f15\",\n//   icon1:  \"#ff67ab , #cb2d74\",\n//   icon2: \"#cbb22d , #cb492d\",\n//   icon3: \"#e30cc1 , #ee2525\",\n//   bg1: \"#1b1c21\",\n//   bg2: \"rgba(255, 255, 255, 0.1)\",\n//   bg3: \"\",\n//   text1: colors.white,\n//   text2: \"#757575\",\n//   text3: \"\",\n// })\n\nexport const shadow = {\n  depth1: \"0 0 16px rgb(58 78 88 / 5%)\",\n  depth2: \"0px 4px 16px rgba(58, 78, 88, 0.15)\",\n};\n","import { colors } from \"./colors\";\nimport media from \"./media\";\nimport { shadow } from \"./shadow\";\nimport { createIconTheme, IIconTheme } from \"./icons\";\nimport { Subset } from \"../typeutils\";\nimport { ICreditCardTheme } from \"./creditcard\";\nimport { IChartTheme } from \"./chart\";\nimport { IProgressBarTheme } from \"./progressbar\";\nimport { IInputTheme } from \"./input\";\nimport { createTypography, ITypographyTheme } from \"./typography\";\n\ntype IColorVariant = {\n  bg: string;\n  color: string;\n};\n\nexport interface ThemeInterface {\n  colors: {\n    common: {\n      black: string;\n      white: string;\n    };\n    default: IColorVariant;\n    secondary: IColorVariant;\n    error: IColorVariant;\n    warning: IColorVariant;\n    info: IColorVariant & { midtone: string };\n    success: IColorVariant;\n    grey: {\n      100: string;\n      200: string;\n      300: string;\n      500: string;\n      700: string;\n    };\n  };\n  media: typeof media;\n  components: {\n    CreditCard: ICreditCardTheme;\n    Chart: IChartTheme;\n    ProgressBar: IProgressBarTheme;\n    Input: IInputTheme;\n    Icons: IIconTheme;\n  };\n  typography: ITypographyTheme;\n  shadows: {\n    depth1: string;\n    depth2: string;\n  };\n}\n\nexport const createTheme = (args: Subset<ThemeInterface> = {}): ThemeInterface => {\n  const typography = createTypography();\n\n  const green = {\n    color: colors.darkgreen800,\n    background: colors.green100,\n    highlightLight: colors.green900,\n    highlightDark: colors.darkgreen900,\n    midtone: colors.green900,\n  };\n  const yellow = {\n    color: colors.brown700,\n    background: colors.brown100,\n    midtone: colors.yellow800,\n  };\n  const blue = {\n    color: colors.blue900,\n    background: colors.blue100,\n    midtone: colors.blue500,\n  };\n  const red = {\n    color: colors.red900,\n    background: colors.brown50,\n    highlightDark: colors.brown800,\n    highlightLight: colors.red500,\n    midtone: colors.red500,\n  };\n  const defaultVariant = {\n    background: colors.black800,\n    color: colors.white,\n  };\n  return {\n    colors: {\n      common: {\n        black: colors.black,\n        white: colors.white,\n      },\n      default: {\n        bg: colors.grey50,\n        color: colors.black,\n      },\n      secondary: {\n        bg: colors.pink100,\n        color: colors.pink500,\n      },\n      error: {\n        bg: colors.error100,\n        color: colors.error500,\n      },\n      warning: {\n        bg: colors.yellow100,\n        color: colors.yellow500,\n      },\n      info: {\n        bg: colors.blue100,\n        color: colors.black,\n        midtone: colors.blue500,\n      },\n      success: {\n        bg: colors.success100,\n        color: colors.success500,\n      },\n      grey: {\n        100: colors.grey100,\n        200: colors.grey200,\n        300: colors.grey300,\n        500: colors.grey500,\n        700: colors.grey700,\n      },\n    },\n    typography,\n    components: {\n      CreditCard: {\n        variants: {\n          default: defaultVariant,\n          green,\n          yellow,\n          blue,\n          red,\n        },\n      },\n      Input: {\n        label: {\n          color: colors.black,\n        },\n        box: {\n          common: {\n            border: `1px solid ${colors.grey300}`,\n            color: colors.grey500,\n          },\n          focusVisible: {\n            borderColor: colors.blue500,\n          },\n          error: {\n            color: colors.error500,\n          },\n        },\n      },\n      ProgressBar: {\n        variants: {\n          default: { midtone: defaultVariant.color },\n          blue,\n          red,\n          green,\n          yellow,\n        },\n      },\n      Chart: {\n        variants: {\n          default: { midtone: defaultVariant.color },\n          blue,\n          red,\n          green,\n          yellow,\n        },\n        common: {\n          colors: [yellow.color, blue.color, red.color, green.color],\n          foreColor: colors.grey500,\n          gridBorderColor: colors.grey700,\n          markerColor: colors.grey500,\n          labelColor: colors.grey500,\n          radialBarBackground: colors.grey500,\n          radarStrokeColor: colors.grey500,\n          radarConnectorColor: colors.grey500,\n          polarRingColor: colors.grey500,\n          polarSpokeConnectorColor: colors.grey500,\n        },\n      },\n      Icons: createIconTheme(),\n    },\n    shadows: shadow,\n\n    media,\n  };\n};\n\nconst DefaultTheme = createTheme();\n\nconst DarkTheme = createTheme();\n\nexport { DefaultTheme, DarkTheme };\n","type IFontInterface = {\n  fontWeight?: number | string;\n  fontSize?: string | number;\n  lineHeight?: number | string;\n  fontFamily?: string;\n};\n\nexport type ITypographyTheme = {\n  common: IFontInterface;\n  h1: IFontInterface;\n  h2: IFontInterface;\n  h3: IFontInterface;\n  h4: IFontInterface;\n  h5: IFontInterface;\n  h6: IFontInterface;\n  display1: IFontInterface;\n  display2: IFontInterface;\n  body1: IFontInterface;\n  body2: IFontInterface;\n};\n\nexport const createTypography = (): ITypographyTheme => {\n  return {\n    common: { fontFamily: \"CircularStd, Public Sans\" },\n    h1: {\n      fontSize: 32,\n      lineHeight: \"48px\",\n    },\n    h2: {\n      fontSize: 24,\n      lineHeight: \"36px\",\n    },\n    h3: {\n      fontSize: 20,\n      lineHeight: \"30px\",\n    },\n    h4: {\n      fontSize: 18,\n      lineHeight: \"28px\",\n    },\n    h5: {\n      fontSize: 16,\n      lineHeight: \"24px\",\n    },\n    h6: {\n      fontSize: 14,\n      lineHeight: \"20px\",\n    },\n    body1: {\n      fontSize: 16,\n      lineHeight: \"24px\",\n    },\n    body2: {\n      fontSize: 14,\n      lineHeight: \"20px\",\n    },\n    display1: {\n      fontSize: 48,\n      lineHeight: \"62px\",\n    },\n    display2: {\n      fontSize: 36,\n      lineHeight: \"48px\",\n    },\n  };\n};\n","import { useState } from \"react\";\n\nconst THEMES = {\n  LIGHT: \"light\",\n  DARK: \"dark\",\n};\n\nconst useDarkTheme = () => {\n  const [theme, setTheme] = useState(THEMES.LIGHT);\n  const themeToggler = () => {\n    theme === THEMES.LIGHT ? setTheme(THEMES.DARK) : setTheme(THEMES.LIGHT);\n  };\n  return [theme, themeToggler];\n};\n\nexport default useDarkTheme;\n","import { useTheme as useStyledTheme } from \"styled-components\";\nimport { DefaultTheme, ThemeInterface } from \"./theme\";\n\nexport const useTheme = (): ThemeInterface => {\n  const theme = useStyledTheme();\n\n  return (theme as ThemeInterface) || DefaultTheme;\n};\n","import { Interpolation, ThemedStyledProps } from \"styled-components\";\nimport { DefaultTheme, ThemeInterface } from \"./theme\";\nimport isEmpty from \"lodash/isEmpty\";\n\nexport const withTheme = <P extends object>(\n  callback: (props: P & { theme: ThemeInterface }) => Interpolation<ThemedStyledProps<P, ThemeInterface>>\n) => {\n  return (props: P & { theme: ThemeInterface }) => {\n    const { theme } = props;\n    if (!isEmpty(theme)) {\n      return callback(props);\n    }\n    return callback({ ...props, theme: DefaultTheme });\n  };\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AAAA;AAAA;AAiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AAZA;AAcA;AAGA;AAAA;AAAA;AAaA;AAGA;AAAA;AAAA;AAOA;AAUA;AAAA;AAAA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AAIA;AAAA;AAAA;AAGA;AAAA;AAGA;AAAA;AAAA;AACA;AAGA;AAQA;AAAA;AAAA;AACA;AAAA;AAAA;AAKA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzGA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AC7DA;AAAA;AACA;AACA;AACA;AACA;AACA;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;ACIA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;AC5BA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAMA;AA0CA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;;;;;;;;;;;;;;ACxKA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;ACfA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;;;;A","sourceRoot":""}